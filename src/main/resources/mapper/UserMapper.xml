<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zredtea.TeaWIKI.mapper.UserMapper">

    <!-- 基础结果映射 -->
    <resultMap id="BaseResultMap" type="com.zredtea.TeaWIKI.entity.User">
        <id column="user_id" property="userId" />
        <result column="username" property="username" />
        <result column="nickname" property="nickname" />
        <result column="avatar" property="avatar" />
        <result column="department" property="department" />
        <result column="password" property="password" />
        <result column="salt" property="salt" />
        <result column="created_at" property="createdAt" />
        <result column="updated_at" property="updatedAt" />
        <result column="deleted" property="deleted" />
    </resultMap>

    <!-- 根据用户名查找用户 -->
    <select id="SelectByUsername" resultMap="BaseResultMap">
        SELECT
            user_id, username, nickname, avatar, department,
            password, salt, created_at, updated_at, deleted
        FROM users
        WHERE username = #{username}
          AND deleted = 0
    </select>

    <select id="SelectIdByUsername" resultMap="java.lang.Integer">
        SELECT user_id
        FROM users
        WHERE username = #{username}
          AND deleted = 0
    </select>

    <!-- 根据用户名检查用户是否存在 -->
    <select id="CheckByUsername" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM users
        WHERE username = #{username}
          AND deleted = 0
    </select>

    <!-- 返回所有用户列表 -->
    <select id="SelectAllUsers" resultMap="BaseResultMap">
        SELECT
            user_id, username, nickname, avatar, department,
            created_at, updated_at
        FROM users
        WHERE deleted = 0
        ORDER BY created_at DESC
    </select>

    <!-- 根据学院返回所有用户列表 -->
    <select id="SelectAllUsersByDepartment" resultMap="BaseResultMap">
        SELECT
            user_id, username, nickname, avatar, department,
            created_at, updated_at
        FROM users
        WHERE department = #{department}
          AND deleted = 0
        ORDER BY username
    </select>

    <!-- 更新用户头像 -->
    <update id="updateUserAvatar">
        UPDATE users
        SET avatar = #{avatar},
            updated_at = NOW()
        WHERE user_id = #{userid}
    </update>

    <!-- 更新用户密码 -->
    <update id="updateUserPassword">
        UPDATE users
        SET password = #{password},
            salt = #{salt},
            updated_at = NOW()
        WHERE user_id = #{userid}
    </update>

    <!-- 更新用户昵称 -->
    <update id="updateUserNickname">
        UPDATE users
        SET nickname = #{nickname},
            updated_at = NOW()
        WHERE user_id = #{userid}
    </update>

</mapper>
